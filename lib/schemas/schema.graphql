type Query {
  pokemons(limit: Int!, offset: Int!): PaginatedPokemon
  pokemon(name: String!): PokemonDetail
}

type PaginatedPokemon {
  count: Int!
  next: String
  previous: String
  nextOffset: Int
  prevOffset: Int
  status: Boolean
  message: String
  results: [Pokemon]
}

type Pokemon {
  id: Int
  url: String
  name: String
  image: String
}

type PokemonDetail {
  id: Int
  name: String
  sprites: Sprites
  location_area_encounters: String
  height: Int
  weight: Int
  species: Species
  stats: [Stats]
  moves: [Moves]
  types: [Types]
  abilities: [Abilities]
}

type Abilities {
  ability: Ability
  slot: Int
  is_hidden: Boolean
}

type Ability {
  name: String
}

type Stats {
  stat: Stat
  base_stat: Int
  effort: Int
}

type Stat {
  name: String
}

type Sprites {
  back_default: String
  back_female: String
  back_shiny: String
  back_shiny_female: String
  front_default: String
  front_female: String
  front_shiny: String
  front_shiny_female: String
}

type Moves {
  move: Move
}

type Move {
  name: String
}

type Types {
  type: Type
}

type Type {
  name: String
}

type Species {
  id: String
  name: String
  url: String
}

query pokemon($name: String!) {
  pokemon(name: $name) {
    id
    name
    sprites {
      back_default
      back_female
      back_shiny
      back_shiny_female
      front_default
      front_female
      front_shiny
      front_shiny_female
    }
    location_area_encounters
    height
    weight
    species {
      id
      name
      url
    }
    stats {
      stat {
        name
      }
      base_stat
      effort
    }
    moves {
      move {
        name
      }
    }
    abilities {
      ability {
        name
      }
      slot
      is_hidden
    }
    types {
      type {
        name
      }
    }
  }
}

query pokemons($limit: Int, $offset: Int) {
  pokemons(limit: $limit, offset: $offset) {
    count
    next
    previous
    nextOffset
    prevOffset
    status
    message
    results {
      id
      url
      name
      image
    }
  }
}
